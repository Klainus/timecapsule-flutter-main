openapi: 3.0.3
info:
  title: boilerplate
  version: 1.0.0
  description: boilerplate
paths:
  /docs/openapi/:
    get:
      operationId: docs_openapi_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - ug
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - docs
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /users/change-password/:
    put:
      operationId: users_change_password_update
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChangePassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChangePassword'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangePassword'
          description: ''
    patch:
      operationId: users_change_password_partial_update
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedChangePassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedChangePassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedChangePassword'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangePassword'
          description: ''
  /users/csrf/:
    get:
      operationId: users_csrf_retrieve
      tags:
      - users
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CSRF'
          description: ''
  /users/login/:
    post:
      operationId: users_login_create
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Login'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Login'
          description: ''
  /users/logout/:
    post:
      operationId: users_logout_create
      tags:
      - users
      security:
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /users/me/:
    get:
      operationId: users_me_retrieve
      description: 'delete: Removes the currently logged in user (requires field ''password'')'
      tags:
      - users
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserMe'
          description: ''
    put:
      operationId: users_me_update
      description: 'delete: Removes the currently logged in user (requires field ''password'')'
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserMe'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserMe'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserMe'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserMe'
          description: ''
    patch:
      operationId: users_me_partial_update
      description: 'delete: Removes the currently logged in user (requires field ''password'')'
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserMe'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserMe'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserMe'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserMe'
          description: ''
    delete:
      operationId: users_me_destroy
      description: 'delete: Removes the currently logged in user (requires field ''password'')'
      tags:
      - users
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /users/register/:
    post:
      operationId: users_register_create
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Registration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Registration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Registration'
        required: true
      security:
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Registration'
          description: ''
  /users/reset-password/:
    post:
      operationId: users_reset_password_create
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResetPassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResetPassword'
        required: true
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetPassword'
          description: ''
  /users/reset-password-confirm/{user_id}/:
    put:
      operationId: users_reset_password_confirm_update
      parameters:
      - in: path
        name: user_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResetPasswordConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResetPasswordConfirm'
        required: true
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetPasswordConfirm'
          description: ''
    patch:
      operationId: users_reset_password_confirm_partial_update
      parameters:
      - in: path
        name: user_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedResetPasswordConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedResetPasswordConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedResetPasswordConfirm'
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetPasswordConfirm'
          description: ''
  /versions/:
    get:
      operationId: versions_retrieve
      tags:
      - versions
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Version'
          description: ''
components:
  schemas:
    ChangePassword:
      type: object
      properties:
        current_password:
          type: string
          writeOnly: true
        new_password:
          type: string
          writeOnly: true
      required:
      - current_password
      - new_password
    CSRF:
      type: object
      properties:
        csrf_token:
          type: string
          readOnly: true
      required:
      - csrf_token
    Login:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
      required:
      - email
      - password
    PatchedChangePassword:
      type: object
      properties:
        current_password:
          type: string
          writeOnly: true
        new_password:
          type: string
          writeOnly: true
    PatchedResetPasswordConfirm:
      type: object
      properties:
        password:
          type: string
          writeOnly: true
        token:
          type: string
          writeOnly: true
    PatchedUserMe:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        email:
          type: string
          format: email
        first_name:
          type: string
          maxLength: 255
        last_name:
          type: string
          maxLength: 255
        is_staff:
          type: boolean
          readOnly: true
          description: Designates whether the user can log into staff site.
    Registration:
      type: object
      properties:
        email:
          type: string
          format: email
        first_name:
          type: string
          maxLength: 255
        last_name:
          type: string
          maxLength: 255
        password:
          type: string
          writeOnly: true
      required:
      - email
      - password
    ResetPassword:
      type: object
      properties:
        email:
          type: string
          writeOnly: true
      required:
      - email
    ResetPasswordConfirm:
      type: object
      properties:
        password:
          type: string
          writeOnly: true
        token:
          type: string
          writeOnly: true
      required:
      - password
      - token
    UserMe:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        email:
          type: string
          format: email
        first_name:
          type: string
          maxLength: 255
        last_name:
          type: string
          maxLength: 255
        is_staff:
          type: boolean
          readOnly: true
          description: Designates whether the user can log into staff site.
      required:
      - email
      - id
      - is_staff
    Version:
      type: object
      properties:
        minimum_version:
          type: string
          readOnly: true
      required:
      - minimum_version
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid