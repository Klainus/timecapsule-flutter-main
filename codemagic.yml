# STRONGLY RECOMMENDED:
# Install the Red Hat YAML VSCode extension or make sure that YAML schema validation and syntax highlighting is enabled in your IDE. 
# This will make working with YAML much more pleasant. 

definitions:
    trigger-on-pr-merge: &trigger-on-pr-merge
        triggering:
            # triggers on the main branch once a pull request has been merged from a feature branch into main.
            events:
                - push
                - pull_request
            branch_patterns:
                - pattern: "main"
                  include: true
                  source: true
            cancel_previous_builds: false

    publish-to-slack: &publish-to-slack
        slack:
            channel: "#boilerplate-builds" # replace with the name of the Slack channel that should be notified.
            notify:
                success: true
                failure: true

    publish-to-firebase-hosting: &publish-to-firebase-hosting
        - name: Publish to Firebase Hosting
          script: |
              if [ -f ~/SUCCESS ]; then
                  firebase deploy \
                    --only hosting \
                    --project=${FLAVOR} \
                    --token "$FIREBASE_TOKEN"
              else
                  echo "Build failed, skipping Firebase deploy"
              fi

    build-web: &build-web
        cache:
            cache_paths:
                - $FLUTTER_ROOT/.pub-cache
        scripts:
            - name: Configure Flutter for web
              script: flutter config --enable-web
            - name: Build web
              script: |
                  echo "Building with flavor: $FLAVOR"
                  flutter build web \
                    --release \
                    --wasm \
                    --target lib/main_${FLAVOR}.dart \
                    --build-name=1.0.$(($PROJECT_BUILD_NUMBER + 5)) \
                    --build-number=$(($PROJECT_BUILD_NUMBER + 5)) \
                    --pwa-strategy=none
            - name: Compress build artifacts
              script: |
                  cd build/web
                  7z a -r ../web.zip ./*
            - name: Build finished successfully
              script: touch ~/SUCCESS
        artifacts:
            - build/*.zip

    build-ios: &build-ios
        cache:
            cache_paths:
                - $FLUTTER_ROOT/.pub-cache
                - $HOME/Library/Caches/CocoaPods
        scripts:
            - name: Set up code signing settings on Xcode project
              script: |
                  xcode-project use-profiles
            - name: Flutter pub get
              script: |
                  flutter pub get
            - name: Install pods
              script: |
                  find . -name "Podfile" -execdir pod install \;
            - name: Flutter build ipa
              script: |
                  echo "Building with flavor: $FLAVOR"
                  flutter build ipa \
                    --release \
                    --flavor ${FLAVOR} \
                    --target lib/main_${FLAVOR}.dart \
                    --build-name=1.0.$(($PROJECT_BUILD_NUMBER + 5)) \
                    --build-number=$(($PROJECT_BUILD_NUMBER + 5)) \
                    --export-options-plist=/Users/builder/export_options.plist
        artifacts:
            - build/ios/ipa/*.ipa
            - /tmp/xcodebuild_logs/*.log
            - flutter_drive.log

    build-android: &build-android
        cache:
            cache_paths:
                - $FLUTTER_ROOT/.pub-cache
                - $HOME/.gradle/caches
        scripts:
            - name: Set up local.properties
              script: |
                  echo "flutter.sdk=$HOME/programs/flutter" > "$CM_BUILD_DIR/android/local.properties"
            - name: Flutter pub get
              script: |
                  flutter pub get
            - name: Build AAB with Flutter
              script: |
                  echo "Building with flavor: $FLAVOR"
                  flutter build appbundle \
                    --release \
                    --flavor ${FLAVOR} \
                    --target lib/main_${FLAVOR}.dart \
                    --build-name=1.0.$(($PROJECT_BUILD_NUMBER + 5)) \
                    --build-number=$(($PROJECT_BUILD_NUMBER + 5)) \
                    --dart-define=cronetHttpNoPlay=true
        artifacts:
            - build/**/outputs/**/*.aab
            - build/**/outputs/**/mapping.txt
            - flutter_drive.log

workflows:
    web-development:
        <<:
            - *trigger-on-pr-merge
            - *build-web
        environment:
            flutter: stable
            groups:
                - firebase_credentials # replace with the name of the environment variable group that contains the necessary Firebase credentials.
            vars:
                FLAVOR: development
        publishing:
            scripts:
                - <<: *publish-to-firebase-hosting
            <<: *publish-to-slack

    ios-development:
        <<:
            - *trigger-on-pr-merge
            - *build-ios
        integrations:
            app_store_connect: Boilerplate API Key # replace with the name of the API key you've uploaded to Codemagic under General Settings > Team Integrations
        environment:
            flutter: stable
            ios_signing:
                distribution_type: app_store
                bundle_identifier: "se.appshack.asboilerplateflutter.dev" # replace with the [DEV] flavor bundle identifier of your app
            vars:
                APP_STORE_APPLE_ID: 6374231628 # replace with the [DEV] App Store ID of your app
                FLAVOR: development
        publishing:
            app_store_connect:
                auth: integration
            <<: *publish-to-slack

    android-development:
        <<:
            - *trigger-on-pr-merge
            - *build-android
        environment:
            flutter: stable
            android_signing:
                - "[DEV] Boilerplate Keystore" # replace with the name of the [DEV] keystore you've uploaded to Codemagic under Code Signing Identities > Android Keystores
            groups:
                - google_play # replace with the name of the environment variable group that contains the necessary Google Play credentials.
            vars:
                FLAVOR: development
        publishing:
            google_play:
                credentials: $GCLOUD_SERVICE_ACCOUNT_CREDENTIALS # replace with the name of the environment variable that contains the service account credentials. must be part of the groups listed above
                track: internal
            <<: *publish-to-slack

    ios-production:
        <<:
            - *trigger-on-pr-merge
            - *build-ios
        integrations:
            app_store_connect: Boilerplate API Key # replace with the name of the API key you've uploaded to Codemagic under General Settings > Team Integrations
        environment:
            flutter: stable
            ios_signing:
                distribution_type: app_store
                bundle_identifier: "se.appshack.asboilerplateflutter" # replace with the bundle identifier of your app
            vars:
                APP_STORE_APPLE_ID: 6474332527 # replace with the App Store ID of your app
                FLAVOR: production
        publishing:
            app_store_connect:
                auth: integration
            <<: *publish-to-slack

    android-production:
        <<:
            - *trigger-on-pr-merge
            - *build-android
        environment:
            flutter: stable
            android_signing:
                - Boilerplate Keystore # replace with the name of the keystore you've uploaded to Codemagic under Code Signing Identities > Android Keystores
            groups:
                - google_play # replace with the name of the environment variable group that contains the necessary Google Play credentials.
            vars:
                FLAVOR: production
        publishing:
            google_play:
                credentials: $GCLOUD_SERVICE_ACCOUNT_CREDENTIALS # replace with the name of the environment variable that contains the service account credentials. must be part of the groups listed above
                track: internal
            <<: *publish-to-slack

    web-production:
        <<:
            - *build-web
        environment:
            flutter: stable
            groups:
                - firebase_credentials
            vars:
                FLAVOR: production
        publishing:
            scripts:
                - <<: *publish-to-firebase-hosting
            <<: *publish-to-slack